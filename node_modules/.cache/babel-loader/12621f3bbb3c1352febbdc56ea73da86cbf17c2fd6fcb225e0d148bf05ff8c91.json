{"ast":null,"code":"import React,{useState,useEffect}from'react';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faArrowLeft,faArrowRight}from'@fortawesome/free-solid-svg-icons';import EWE from'../Universes/EWE/src/EWE';import EcoGame from'../Universes/ECI/EcoGame';import EatsApp from'../Universes/EWI/src/EatsApp';import'../css/UniverseSwitcher.css';import loadingImage from'../components/public/load_screen_univ.avif';import'../css/UniverseSwitcher.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const UniverseSwitcher=()=>{const[currentUniverse,setCurrentUniverse]=useState('EWE');const[nextUniverse,setNextUniverse]=useState('');const[isTabOpen,setIsTabOpen]=useState(false);const[isLoading,setIsLoading]=useState(false);const universeOrder=['EWE','ECI','EWI'];const getNextUniverse=direction=>{const currentIndex=universeOrder.indexOf(currentUniverse);if(direction==='next'){return universeOrder[(currentIndex+1)%universeOrder.length];}else if(direction==='prev'){return universeOrder[(currentIndex-1+universeOrder.length)%universeOrder.length];}};const changeUniverse=direction=>{setIsLoading(true);const next=getNextUniverse(direction);setNextUniverse(next);setTimeout(()=>{setCurrentUniverse(next);setIsLoading(false);},2000);};const renderUniverse=()=>{switch(currentUniverse){case'EWE':return/*#__PURE__*/_jsx(EWE,{setIsTabOpen:setIsTabOpen});case'ECI':return/*#__PURE__*/_jsx(EcoGame,{setIsTabOpen:setIsTabOpen});case'EWI':return/*#__PURE__*/_jsx(EatsApp,{setIsTabOpen:setIsTabOpen});default:return/*#__PURE__*/_jsx(EWE,{setIsTabOpen:setIsTabOpen});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[!isTabOpen&&!isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"btn-container\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"npBtn\",onClick:()=>changeUniverse('prev'),children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faArrowLeft})}),/*#__PURE__*/_jsx(\"button\",{className:\"npBtn\",onClick:()=>changeUniverse('next'),children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faArrowRight})})]}),/*#__PURE__*/_jsx(\"main\",{children:isLoading?/*#__PURE__*/_jsxs(\"div\",{className:\"loading-screen\",children:[/*#__PURE__*/_jsx(\"img\",{src:loadingImage,alt:\"Loading\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\u041F\\u0435\\u0440\\u0435\\u0445\\u043E\\u0434 \\u0432\\u043E \\u0432\\u0441\\u0435\\u043B\\u0435\\u043D\\u043D\\u0443\\u044E \",nextUniverse,\"...\"]})]}):renderUniverse()})]});};export default UniverseSwitcher;","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faArrowLeft","faArrowRight","EWE","EcoGame","EatsApp","loadingImage","jsx","_jsx","jsxs","_jsxs","UniverseSwitcher","currentUniverse","setCurrentUniverse","nextUniverse","setNextUniverse","isTabOpen","setIsTabOpen","isLoading","setIsLoading","universeOrder","getNextUniverse","direction","currentIndex","indexOf","length","changeUniverse","next","setTimeout","renderUniverse","className","children","onClick","icon","src","alt"],"sources":["C:/Users/jabba/OneDrive/Desktop/Clicker_Game_3.0/frontend/src/components/UniverseSwitcher.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport EWE from '../Universes/EWE/src/EWE';\r\nimport EcoGame from '../Universes/ECI/EcoGame';\r\nimport EatsApp from '../Universes/EWI/src/EatsApp';\r\nimport '../css/UniverseSwitcher.css';\r\nimport loadingImage from '../components/public/load_screen_univ.avif';\r\nimport '../css/UniverseSwitcher.css';\r\n\r\nconst UniverseSwitcher = () => {\r\n  const [currentUniverse, setCurrentUniverse] = useState('EWE');\r\n  const [nextUniverse, setNextUniverse] = useState('');\r\n  const [isTabOpen, setIsTabOpen] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const universeOrder = ['EWE', 'ECI', 'EWI'];\r\n\r\n  const getNextUniverse = (direction) => {\r\n    const currentIndex = universeOrder.indexOf(currentUniverse);\r\n    if (direction === 'next') {\r\n      return universeOrder[(currentIndex + 1) % universeOrder.length];\r\n    } else if (direction === 'prev') {\r\n      return universeOrder[(currentIndex - 1 + universeOrder.length) % universeOrder.length];\r\n    }\r\n  };\r\n\r\n  const changeUniverse = (direction) => {\r\n    setIsLoading(true);\r\n    const next = getNextUniverse(direction);\r\n    setNextUniverse(next);\r\n    setTimeout(() => {\r\n      setCurrentUniverse(next);\r\n      setIsLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const renderUniverse = () => {\r\n    switch (currentUniverse) {\r\n      case 'EWE':\r\n        return <EWE setIsTabOpen={setIsTabOpen} />;\r\n      case 'ECI':\r\n        return <EcoGame setIsTabOpen={setIsTabOpen} />;\r\n      case 'EWI':\r\n        return <EatsApp setIsTabOpen={setIsTabOpen} />;\r\n      default:\r\n        return <EWE setIsTabOpen={setIsTabOpen} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      {!isTabOpen && !isLoading && (\r\n        <div className='btn-container'>\r\n          <button className='npBtn' onClick={() => changeUniverse('prev')}>\r\n            <FontAwesomeIcon icon={faArrowLeft} />\r\n          </button>\r\n          <button className='npBtn' onClick={() => changeUniverse('next')}>\r\n            <FontAwesomeIcon icon={faArrowRight} />\r\n          </button>\r\n        </div>\r\n      )}\r\n      <main>\r\n        {isLoading ? (\r\n          <div className=\"loading-screen\">\r\n            <img src={loadingImage} alt=\"Loading\" />\r\n            <p>Переход во вселенную {nextUniverse}...</p>\r\n          </div>\r\n        ) : (\r\n          renderUniverse()\r\n        )}\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UniverseSwitcher;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,eAAe,KAAQ,gCAAgC,CAChE,OAASC,WAAW,CAAEC,YAAY,KAAQ,mCAAmC,CAC7E,MAAO,CAAAC,GAAG,KAAM,0BAA0B,CAC1C,MAAO,CAAAC,OAAO,KAAM,0BAA0B,CAC9C,MAAO,CAAAC,OAAO,KAAM,8BAA8B,CAClD,MAAO,6BAA6B,CACpC,MAAO,CAAAC,YAAY,KAAM,4CAA4C,CACrE,MAAO,6BAA6B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAErC,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAACC,eAAe,CAAEC,kBAAkB,CAAC,CAAGf,QAAQ,CAAC,KAAK,CAAC,CAC7D,KAAM,CAACgB,YAAY,CAAEC,eAAe,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACkB,SAAS,CAAEC,YAAY,CAAC,CAAGnB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACoB,SAAS,CAAEC,YAAY,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAAsB,aAAa,CAAG,CAAC,KAAK,CAAE,KAAK,CAAE,KAAK,CAAC,CAE3C,KAAM,CAAAC,eAAe,CAAIC,SAAS,EAAK,CACrC,KAAM,CAAAC,YAAY,CAAGH,aAAa,CAACI,OAAO,CAACZ,eAAe,CAAC,CAC3D,GAAIU,SAAS,GAAK,MAAM,CAAE,CACxB,MAAO,CAAAF,aAAa,CAAC,CAACG,YAAY,CAAG,CAAC,EAAIH,aAAa,CAACK,MAAM,CAAC,CACjE,CAAC,IAAM,IAAIH,SAAS,GAAK,MAAM,CAAE,CAC/B,MAAO,CAAAF,aAAa,CAAC,CAACG,YAAY,CAAG,CAAC,CAAGH,aAAa,CAACK,MAAM,EAAIL,aAAa,CAACK,MAAM,CAAC,CACxF,CACF,CAAC,CAED,KAAM,CAAAC,cAAc,CAAIJ,SAAS,EAAK,CACpCH,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAQ,IAAI,CAAGN,eAAe,CAACC,SAAS,CAAC,CACvCP,eAAe,CAACY,IAAI,CAAC,CACrBC,UAAU,CAAC,IAAM,CACff,kBAAkB,CAACc,IAAI,CAAC,CACxBR,YAAY,CAAC,KAAK,CAAC,CACrB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED,KAAM,CAAAU,cAAc,CAAGA,CAAA,GAAM,CAC3B,OAAQjB,eAAe,EACrB,IAAK,KAAK,CACR,mBAAOJ,IAAA,CAACL,GAAG,EAACc,YAAY,CAAEA,YAAa,CAAE,CAAC,CAC5C,IAAK,KAAK,CACR,mBAAOT,IAAA,CAACJ,OAAO,EAACa,YAAY,CAAEA,YAAa,CAAE,CAAC,CAChD,IAAK,KAAK,CACR,mBAAOT,IAAA,CAACH,OAAO,EAACY,YAAY,CAAEA,YAAa,CAAE,CAAC,CAChD,QACE,mBAAOT,IAAA,CAACL,GAAG,EAACc,YAAY,CAAEA,YAAa,CAAE,CAAC,CAC9C,CACF,CAAC,CAED,mBACEP,KAAA,QAAKoB,SAAS,CAAC,WAAW,CAAAC,QAAA,EACvB,CAACf,SAAS,EAAI,CAACE,SAAS,eACvBR,KAAA,QAAKoB,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BvB,IAAA,WAAQsB,SAAS,CAAC,OAAO,CAACE,OAAO,CAAEA,CAAA,GAAMN,cAAc,CAAC,MAAM,CAAE,CAAAK,QAAA,cAC9DvB,IAAA,CAACR,eAAe,EAACiC,IAAI,CAAEhC,WAAY,CAAE,CAAC,CAChC,CAAC,cACTO,IAAA,WAAQsB,SAAS,CAAC,OAAO,CAACE,OAAO,CAAEA,CAAA,GAAMN,cAAc,CAAC,MAAM,CAAE,CAAAK,QAAA,cAC9DvB,IAAA,CAACR,eAAe,EAACiC,IAAI,CAAE/B,YAAa,CAAE,CAAC,CACjC,CAAC,EACN,CACN,cACDM,IAAA,SAAAuB,QAAA,CACGb,SAAS,cACRR,KAAA,QAAKoB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BvB,IAAA,QAAK0B,GAAG,CAAE5B,YAAa,CAAC6B,GAAG,CAAC,SAAS,CAAE,CAAC,cACxCzB,KAAA,MAAAqB,QAAA,EAAG,iHAAqB,CAACjB,YAAY,CAAC,KAAG,EAAG,CAAC,EAC1C,CAAC,CAENe,cAAc,CAAC,CAChB,CACG,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}