{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./PurblePairs.css';import backgroundMusicFile from'./audio/pokemonGym.mp3';import winEffectFile from'./audio/win.mp3';import startButtonSound from'./audio/start.mp3';import cardClickSound from'./audio/card.mp3';// Импортируем изображения\nimport img1 from'./img/1.png';import img2 from'./img/2.png';import img3 from'./img/3.png';import img4 from'./img/4.png';import img5 from'./img/5.png';import img6 from'./img/6.png';import img7 from'./img/7.png';import img8 from'./img/8.png';// Базовая коллекция карт\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const baseCollection=[{id:1,art:img1},{id:2,art:img2},{id:3,art:img3},{id:4,art:img4},{id:5,art:img5},{id:6,art:img6},{id:7,art:img7},{id:8,art:img8}];const shuffleArray=array=>array.sort(()=>Math.random()-0.5);const PurblePairs=_ref=>{let{onVictory}=_ref;const[cards,setCards]=useState([]);const[flippedCards,setFlippedCards]=useState([]);const[matchedPairs,setMatchedPairs]=useState([]);const[isWin,setIsWin]=useState(false);const[isGameStarted,setIsGameStarted]=useState(false);const[timer,setTimer]=useState(999);const[showMessage,setShowMessage]=useState(false);const[messageText,setMessageText]=useState('');const[score,setScore]=useState(0);useEffect(()=>{const doubledCards=shuffleArray([...baseCollection,...baseCollection].map(card=>({...card,isFlipped:false,isMatched:false})));setCards(doubledCards);},[]);useEffect(()=>{let interval;if(isGameStarted&&timer>0){interval=setInterval(()=>{setTimer(prev=>prev-1);},1000);}else if(timer===0){setIsGameStarted(false);setMessageText(\"Time's up! You lost.\");setShowMessage(true);}return()=>clearInterval(interval);},[isGameStarted,timer]);useEffect(()=>{const audio=new Audio(backgroundMusicFile);audio.loop=true;const playAudio=()=>{audio.play().catch(error=>console.error('Ошибка при воспроизведении фоновой музыки:',error));};playAudio();const handleVisibilityChange=()=>{if(document.visibilityState==='hidden'){audio.pause();}else{playAudio();}};document.addEventListener('visibilitychange',handleVisibilityChange);return()=>{audio.pause();document.removeEventListener('visibilitychange',handleVisibilityChange);};},[]);const playSound=soundFile=>{const audio=new Audio(soundFile);audio.play().catch(error=>console.error('Ошибка при воспроизведении звука:',error));};const startGame=()=>{playSound(startButtonSound);// Воспроизведение звука при нажатии кнопки \"Start\"\nsetIsWin(false);setTimer(999);setScore(0);// Сброс счёта при начале игры\nsetIsGameStarted(true);setMatchedPairs([]);setFlippedCards([]);setShowMessage(false);const shuffledCards=shuffleArray([...baseCollection,...baseCollection].map(card=>({...card,isFlipped:false,isMatched:false})));setCards(shuffledCards);};const handleCardClick=index=>{if(!isGameStarted||cards[index].isFlipped||cards[index].isMatched)return;playSound(cardClickSound);// Воспроизведение звука при нажатии на карточку\nconst newCards=[...cards];newCards[index].isFlipped=true;setCards(newCards);const newFlippedCards=[...flippedCards,index];setFlippedCards(newFlippedCards);if(newFlippedCards.length===2){const[firstIndex,secondIndex]=newFlippedCards;if(newCards[firstIndex].id===newCards[secondIndex].id){newCards[firstIndex].isMatched=true;newCards[secondIndex].isMatched=true;setMatchedPairs([...matchedPairs,newCards[firstIndex].id]);// Увеличиваем счёт на 10\nsetScore(prevScore=>prevScore+10);}else{setTimeout(()=>{newCards[firstIndex].isFlipped=false;newCards[secondIndex].isFlipped=false;setCards(newCards);},800);// Закрываются за 0.8 секунд\n}setFlippedCards([]);}};useEffect(()=>{if(matchedPairs.length===baseCollection.length){setIsWin(true);setIsGameStarted(false);setMessageText(\"You Win!\");setShowMessage(true);playSound(winEffectFile);onVictory();}},[matchedPairs,onVictory]);return/*#__PURE__*/_jsxs(\"div\",{className:\"purble-pairs\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"game-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"timer\",children:[\"Time:\",/*#__PURE__*/_jsx(\"p\",{className:\"timerBtn\",children:timer})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"score\",children:[\"Score:\",/*#__PURE__*/_jsx(\"p\",{className:\"scoreBtn\",children:score})]})]}),/*#__PURE__*/_jsx(\"button\",{className:\"btn-game\",onClick:startGame,children:\"Start\"}),/*#__PURE__*/_jsx(\"div\",{className:\"cards\",children:/*#__PURE__*/_jsx(\"div\",{className:\"cards-grid\",children:cards.map((card,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"card \".concat(card.isFlipped?'flipped':'',\" \").concat(card.isMatched?'matched':''),onClick:()=>handleCardClick(index),children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-front\",children:/*#__PURE__*/_jsx(\"img\",{className:\"card-img\",src:card.art,alt:\"Card \".concat(card.id)})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-back\",children:/*#__PURE__*/_jsx(\"span\",{className:\"back-descr\",children:\"Open\"})})]},index))})}),showMessage&&/*#__PURE__*/_jsx(\"div\",{className:\"message\",children:messageText})]});};export default PurblePairs;","map":{"version":3,"names":["React","useState","useEffect","backgroundMusicFile","winEffectFile","startButtonSound","cardClickSound","img1","img2","img3","img4","img5","img6","img7","img8","jsx","_jsx","jsxs","_jsxs","baseCollection","id","art","shuffleArray","array","sort","Math","random","PurblePairs","_ref","onVictory","cards","setCards","flippedCards","setFlippedCards","matchedPairs","setMatchedPairs","isWin","setIsWin","isGameStarted","setIsGameStarted","timer","setTimer","showMessage","setShowMessage","messageText","setMessageText","score","setScore","doubledCards","map","card","isFlipped","isMatched","interval","setInterval","prev","clearInterval","audio","Audio","loop","playAudio","play","catch","error","console","handleVisibilityChange","document","visibilityState","pause","addEventListener","removeEventListener","playSound","soundFile","startGame","shuffledCards","handleCardClick","index","newCards","newFlippedCards","length","firstIndex","secondIndex","prevScore","setTimeout","className","children","onClick","concat","src","alt"],"sources":["C:/Users/jabba/OneDrive/Desktop/Clicker_Game_3.0/frontend/src/Universes/EWI/src/games/purble-game/PurblePairs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './PurblePairs.css';\r\nimport backgroundMusicFile from './audio/pokemonGym.mp3';\r\nimport winEffectFile from './audio/win.mp3';\r\nimport startButtonSound from './audio/start.mp3';\r\nimport cardClickSound from './audio/card.mp3';\r\n\r\n// Импортируем изображения\r\nimport img1 from './img/1.png';\r\nimport img2 from './img/2.png';\r\nimport img3 from './img/3.png';\r\nimport img4 from './img/4.png';\r\nimport img5 from './img/5.png';\r\nimport img6 from './img/6.png';\r\nimport img7 from './img/7.png';\r\nimport img8 from './img/8.png';\r\n\r\n// Базовая коллекция карт\r\nconst baseCollection = [\r\n    { id: 1, art: img1 },\r\n    { id: 2, art: img2 },\r\n    { id: 3, art: img3 },\r\n    { id: 4, art: img4 },\r\n    { id: 5, art: img5 },\r\n    { id: 6, art: img6 },\r\n    { id: 7, art: img7 },\r\n    { id: 8, art: img8 },\r\n];\r\n\r\nconst shuffleArray = (array) => array.sort(() => Math.random() - 0.5);\r\n\r\nconst PurblePairs = ({ onVictory }) => {\r\n    const [cards, setCards] = useState([]);\r\n    const [flippedCards, setFlippedCards] = useState([]);\r\n    const [matchedPairs, setMatchedPairs] = useState([]);\r\n    const [isWin, setIsWin] = useState(false);\r\n    const [isGameStarted, setIsGameStarted] = useState(false);\r\n    const [timer, setTimer] = useState(999);\r\n    const [showMessage, setShowMessage] = useState(false);\r\n    const [messageText, setMessageText] = useState('');\r\n    const [score, setScore] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const doubledCards = shuffleArray([...baseCollection, ...baseCollection].map(card => ({\r\n            ...card,\r\n            isFlipped: false,\r\n            isMatched: false\r\n        })));\r\n        setCards(doubledCards);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        let interval;\r\n        if (isGameStarted && timer > 0) {\r\n            interval = setInterval(() => {\r\n                setTimer(prev => prev - 1);\r\n            }, 1000);\r\n        } else if (timer === 0) {\r\n            setIsGameStarted(false);\r\n            setMessageText(\"Time's up! You lost.\");\r\n            setShowMessage(true);\r\n        }\r\n        return () => clearInterval(interval);\r\n    }, [isGameStarted, timer]);\r\n\r\n    useEffect(() => {\r\n        const audio = new Audio(backgroundMusicFile);\r\n        audio.loop = true;\r\n\r\n        const playAudio = () => {\r\n            audio.play().catch(error => console.error('Ошибка при воспроизведении фоновой музыки:', error));\r\n        };\r\n\r\n        playAudio();\r\n\r\n        const handleVisibilityChange = () => {\r\n            if (document.visibilityState === 'hidden') {\r\n                audio.pause();\r\n            } else {\r\n                playAudio();\r\n            }\r\n        };\r\n\r\n        document.addEventListener('visibilitychange', handleVisibilityChange);\r\n\r\n        return () => {\r\n            audio.pause();\r\n            document.removeEventListener('visibilitychange', handleVisibilityChange);\r\n        };\r\n    }, []);\r\n\r\n    const playSound = (soundFile) => {\r\n        const audio = new Audio(soundFile);\r\n        audio.play().catch(error => console.error('Ошибка при воспроизведении звука:', error));\r\n    };\r\n\r\n    const startGame = () => {\r\n        playSound(startButtonSound); // Воспроизведение звука при нажатии кнопки \"Start\"\r\n        setIsWin(false);\r\n        setTimer(999);\r\n        setScore(0); // Сброс счёта при начале игры\r\n        setIsGameStarted(true);\r\n        setMatchedPairs([]);\r\n        setFlippedCards([]);\r\n        setShowMessage(false);\r\n        const shuffledCards = shuffleArray([...baseCollection, ...baseCollection].map(card => ({\r\n            ...card,\r\n            isFlipped: false,\r\n            isMatched: false\r\n        })));\r\n        setCards(shuffledCards);\r\n    };\r\n\r\n    const handleCardClick = (index) => {\r\n        if (!isGameStarted || cards[index].isFlipped || cards[index].isMatched) return;\r\n\r\n        playSound(cardClickSound); // Воспроизведение звука при нажатии на карточку\r\n\r\n        const newCards = [...cards];\r\n        newCards[index].isFlipped = true;\r\n        setCards(newCards);\r\n\r\n        const newFlippedCards = [...flippedCards, index];\r\n        setFlippedCards(newFlippedCards);\r\n\r\n        if (newFlippedCards.length === 2) {\r\n            const [firstIndex, secondIndex] = newFlippedCards;\r\n            if (newCards[firstIndex].id === newCards[secondIndex].id) {\r\n                newCards[firstIndex].isMatched = true;\r\n                newCards[secondIndex].isMatched = true;\r\n                setMatchedPairs([...matchedPairs, newCards[firstIndex].id]);\r\n                // Увеличиваем счёт на 10\r\n                setScore(prevScore => prevScore + 10);\r\n            } else {\r\n                setTimeout(() => {\r\n                    newCards[firstIndex].isFlipped = false;\r\n                    newCards[secondIndex].isFlipped = false;\r\n                    setCards(newCards);\r\n                }, 800); // Закрываются за 0.8 секунд\r\n            }\r\n            setFlippedCards([]);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (matchedPairs.length === baseCollection.length) {\r\n            setIsWin(true);\r\n            setIsGameStarted(false);\r\n            setMessageText(\"You Win!\");\r\n            setShowMessage(true);\r\n            playSound(winEffectFile);\r\n            onVictory();\r\n        }\r\n    }, [matchedPairs, onVictory]);\r\n\r\n    return (\r\n        <div className=\"purble-pairs\">\r\n            <div className=\"game-header\">\r\n                <div className=\"timer\">Time:<p className='timerBtn'>{timer}</p></div>\r\n                <div className='score'>Score:<p className='scoreBtn'>{score}</p></div>\r\n            </div>\r\n            <button className='btn-game' onClick={startGame}>Start</button>\r\n            <div className=\"cards\">\r\n                <div className='cards-grid'>\r\n                    {cards.map((card, index) => (\r\n                        <div\r\n                            key={index}\r\n                            className={`card ${card.isFlipped ? 'flipped' : ''} ${card.isMatched ? 'matched' : ''}`}\r\n                            onClick={() => handleCardClick(index)}\r\n                        >\r\n                            <div className=\"card-front\">\r\n                                <img className='card-img' src={card.art} alt={`Card ${card.id}`} />\r\n                            </div>\r\n                            <div className=\"card-back\">\r\n                                <span className='back-descr'>Open</span>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            {showMessage && <div className=\"message\">{messageText}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PurblePairs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}